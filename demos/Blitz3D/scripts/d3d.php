<?php


$b3dLib = new WinCBase('b3d', 'b3d.dll');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbVersion');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbSetBlitz3DDebugMode', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbSetBlitz3DHWND', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbSetBlitz3DTitle', 'PAnsiChar', 'PAnsiChar');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbBeginBlitz3D');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbBeginBlitz3DEx', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbEndBlitz3D');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbValidateGraphics');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbRuntimeError', 'PAnsiChar');
$b3dLib->add(WinCBase::cdecl, 'PAnsiChar', 'bbSystemProperty', 'PAnsiChar');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbMilliSecs');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbDelay', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbShowPointer');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbHidePointer');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCreateTimer', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbFreeTimer', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbWaitTimer', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbKeyDown', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbKeyHit', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbGetKey');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbWaitKey');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbFlushKeys');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbMouseDown', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbMouseHit', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbGetMouse');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbWaitMouse');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbMouseX');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbMouseY');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbMouseZ');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbMouseXSpeed');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbMouseYSpeed');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbMouseZSpeed');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbMoveMouse', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbFlushMouse');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbJoyType', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbJoyDown', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbJoyHit', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbGetJoy', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbWaitJoy', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbJoyX', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbJoyY', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbJoyZ', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbJoyU', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbJoyV', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbJoyPitch', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbJoyYaw', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbJoyRoll', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbJoyHat', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbJoyXDir', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbJoyYDir', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbJoyZDir', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbJoyUDir', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbJoyVDir', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbFlushJoy');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbLoadSound', 'PAnsiChar', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbFreeSound', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbPlaySound', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbLoopSound', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbSoundPitch', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbSoundVolume', 'int', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbSoundPan', 'int', 'float');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbPlayMusic', 'PAnsiChar', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbPlayCDTrack', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbStopChannel', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbPauseChannel', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbResumeChannel', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbChannelPitch', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbChannelVolume', 'int', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbChannelPan', 'int', 'float');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbChannelPlaying', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbGraphics3D', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCountGfxDrivers');
$b3dLib->add(WinCBase::cdecl, 'PAnsiChar', 'bbGfxDriverName', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbGfxDriver3D', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbGfxDriverCaps3D');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCountGfxModes3D');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbGfxMode3DExists', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbGfxMode3D', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbWindowed3D');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbGfxDriverX', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbGfxDriverY', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbGfxDriverHz', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbSetGfxDriver', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbGfxModeExists', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCountGfxModes');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbGfxModeWidth', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbGfxModeHeight', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbGfxModeDepth', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbGraphicsWidth');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbGraphicsHeight');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbGraphicsDepth');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbAvailVidMem');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbTotalVidMem');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbGraphics', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbFrontBuffer');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbBackBuffer');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbEndGraphics');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbGraphicsLost');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbScanLine');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbVWait', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbFlip', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbSetBuffer', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbGraphicsBuffer');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbLoadBuffer', 'int', 'PAnsiChar');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbSaveBuffer', 'int', 'PAnsiChar');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbBufferDirty', 'int');
//$b3dLib->add(WinCBase::cdecl, 'void', 'bbAutoBufferDirty', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbLockBuffer', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbUnlockBuffer', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbReadPixel', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbWritePixel', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbReadPixelFast', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbWritePixelFast', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbCopyPixel', 'int', 'int', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbCopyPixelFast', 'int', 'int', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbOrigin', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbViewport', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbColor', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbClsColor', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbCls');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbPlot', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbLine', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbRect', 'int', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbOval', 'int', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbText', 'int', 'int', 'PAnsiChar', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbCopyRect', 'int', 'int', 'int', 'int', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbGetColor', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbColorRed');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbColorGreen');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbColorBlue');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbLoadFont', 'PAnsiChar', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbFreeFont', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbSetFont', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbFontWidth');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbFontHeight');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbStringWidth', 'PAnsiChar');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbStringHeight', 'PAnsiChar');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbLoadImage', 'PAnsiChar');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCopyImage', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCreateImage', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbLoadAnimImage', 'PAnsiChar', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbFreeImage', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbSaveImage', 'int', 'PAnsiChar', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbGrabImage', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbImageBuffer', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbDrawImage', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbDrawBlock', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbTileImage', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbTileBlock', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbDrawImageRect', 'int', 'int', 'int', 'int', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbDrawBlockRect', 'int', 'int', 'int', 'int', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbMaskImage', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbHandleImage', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbScaleImage', 'int', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbResizeImage', 'int', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbRotateImage', 'int', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbTFormImage', 'int', 'float', 'float', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbTFormFilter', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbAutoMidHandle', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbMidHandle', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbImageWidth', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbImageHeight', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbImageXHandle', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbImageYHandle', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbImagesOverlap', 'int', 'int', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbImagesCollide', 'int', 'int', 'int', 'int', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbRectsOverlap', 'int', 'int', 'int', 'int', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbImageRectOverlap', 'int', 'int', 'int', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbImageRectCollide', 'int', 'int', 'int', 'int', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbWrite', 'PAnsiChar');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbPrint', 'PAnsiChar');
$b3dLib->add(WinCBase::cdecl, 'PAnsiChar', 'bbInput', 'PAnsiChar');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbLocate', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbOpenMovie', 'PAnsiChar');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbDrawMovie', 'int', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbMovieWidth', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbMovieHeight', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbMoviePlaying', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbCloseMovie', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbSetGamma', 'int', 'int', 'int', 'float', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbUpdateGamma', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbGammaRed', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbGammaGreen', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbGammaBlue', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbHWTexUnits');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbHWMultiTex', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbWBuffer', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbDither', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbAntiAlias', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbWireFrame', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbAmbientLight', 'float', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbClearCollisions');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbCollisions', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbUpdateWorld', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbRenderWorld', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbCaptureWorld');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbTrisRendered');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbStats3D', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbLoadTexture', 'PAnsiChar', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCreateTexture', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbLoadAnimTexture', 'PAnsiChar', 'int', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbFreeTexture', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbTextureBlend', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbTextureCoords', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbScaleTexture', 'int', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbRotateTexture', 'int', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbPositionTexture', 'int', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbTextureWidth', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbTextureHeight', 'int');
$b3dLib->add(WinCBase::cdecl, 'PAnsiChar', 'bbTextureName', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbSetCubeFace', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbSetCubeMode', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbTextureBuffer', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbClearTextureFilters');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbTextureFilter', 'PAnsiChar', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCreateBrush', 'float', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbLoadBrush', 'PAnsiChar', 'int', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbFreeBrush', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbBrushColor', 'int', 'float', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbBrushAlpha', 'int', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbBrushShininess', 'int', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbBrushTexture', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbGetBrushTexture', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbBrushBlend', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbBrushFX', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCreateMesh', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbLoadMesh', 'PAnsiChar', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbLoadAnimMesh', 'PAnsiChar', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCreateCube', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCreateSphere', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCreateCylinder', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCreateCone', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCopyMesh', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbScaleMesh', 'int', 'float', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbRotateMesh', 'int', 'float', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbPositionMesh', 'int', 'float', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbFitMesh', 'int', 'float', 'float', 'float', 'float', 'float', 'float', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbFlipMesh', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbPaintMesh', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbAddMesh', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbUpdateNormals', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbLightMesh', 'int', 'float', 'float', 'float', 'float', 'float', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbMeshWidth', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbMeshHeight', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbMeshDepth', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbMeshesIntersect', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCountSurfaces', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbGetSurface', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbMeshCullBox', 'int', 'float', 'float', 'float', 'float', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCreateSurface', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbFindSurface', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbGetSurfaceBrush', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbGetEntityBrush', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbClearSurface', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbPaintSurface', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbAddVertex', 'int', 'float', 'float', 'float', 'float', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbAddTriangle', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbVertexCoords', 'int', 'int', 'float', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbVertexNormal', 'int', 'int', 'float', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbVertexColor', 'int', 'int', 'float', 'float', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbVertexTexCoords', 'int', 'int', 'float', 'float', 'float', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCountVertices', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCountTriangles', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbVertexX', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbVertexY', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbVertexZ', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbVertexNX', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbVertexNY', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbVertexNZ', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbVertexRed', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbVertexGreen', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbVertexBlue', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbVertexAlpha', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbVertexU', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbVertexV', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbVertexW', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbTriangleVertex', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCreateCamera', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbCameraZoom', 'int', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbCameraRange', 'int', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbCameraClsColor', 'int', 'float', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbCameraClsMode', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbCameraProjMode', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbCameraViewport', 'int', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbCameraFogRange', 'int', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbCameraFogColor', 'int', 'float', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbCameraFogMode', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCameraProject', 'int', 'float', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbProjectedX');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbProjectedY');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbProjectedZ');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCameraPick', 'int', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbLinePick', 'float', 'float', 'float', 'float', 'float', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbEntityPick', 'int', 'float');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbEntityVisible', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbEntityInView', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbPickedX');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbPickedY');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbPickedZ');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbPickedNX');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbPickedNY');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbPickedNZ');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbPickedTime');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbPickedEntity');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbPickedSurface');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbPickedTriangle');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCreateLight', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbLightColor', 'int', 'float', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbLightRange', 'int', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbLightConeAngles', 'int', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCreatePivot', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCreateSprite', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbLoadSprite', 'PAnsiChar', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbRotateSprite', 'int', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbScaleSprite', 'int', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbHandleSprite', 'int', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbSpriteViewMode', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCreateMirror', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCreatePlane', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbLoadMD2', 'PAnsiChar', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbAnimateMD2', 'int', 'int', 'float', 'int', 'int', 'float');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbMD2AnimTime', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbMD2AnimLength', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbMD2Animating', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbLoadBSP', 'PAnsiChar', 'float', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbBSPAmbientLight', 'int', 'float', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbBSPLighting', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCreateTerrain', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbLoadTerrain', 'PAnsiChar', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbTerrainDetail', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbTerrainShading', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbTerrainX', 'int', 'float', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbTerrainY', 'int', 'float', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbTerrainZ', 'int', 'float', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbTerrainSize', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbTerrainHeight', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbModifyTerrain', 'int', 'int', 'int', 'float', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCreateListener', 'int', 'float', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbEmitSound', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCopyEntity', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbFreeEntity', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbHideEntity', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbShowEntity', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbEntityParent', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCountChildren', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbGetChild', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbFindChild', 'int', 'PAnsiChar');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbLoadAnimSeq', 'int', 'PAnsiChar');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbSetAnimTime', 'int', 'float', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbAnimate', 'int', 'int', 'float', 'int', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbSetAnimKey', 'int', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbExtractAnimSeq', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbAddAnimSeq', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbAnimSeq', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbAnimTime', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbAnimLength', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbAnimating', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbPaintEntity', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbEntityColor', 'int', 'float', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbEntityAlpha', 'int', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbEntityShininess', 'int', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbEntityTexture', 'int', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbEntityBlend', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbEntityFX', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbEntityAutoFade', 'int', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbEntityOrder', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbEntityX', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbEntityY', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbEntityZ', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbEntityPitch', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbEntityYaw', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbEntityRoll', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbGetMatElement', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbTFormPoint', 'float', 'float', 'float', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbTFormVector', 'float', 'float', 'float', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbTFormNormal', 'float', 'float', 'float', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbTFormedX');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbTFormedY');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbTFormedZ');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbVectorYaw', 'float', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbVectorPitch', 'float', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbDeltaYaw', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbDeltaPitch', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbResetEntity', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbCaptureEntity', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbEntityType', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbEntityPickMode', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbGetParent', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbGetEntityType', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbEntityRadius', 'int', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbEntityBox', 'int', 'float', 'float', 'float', 'float', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbEntityCollided', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCountCollisions', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbCollisionX', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbCollisionY', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbCollisionZ', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbCollisionNX', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbCollisionNY', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbCollisionNZ', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbCollisionTime', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCollisionEntity', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCollisionSurface', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbCollisionTriangle', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'float', 'bbEntityDistance', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbMoveEntity', 'int', 'float', 'float', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbTurnEntity', 'int', 'float', 'float', 'float', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbTranslateEntity', 'int', 'float', 'float', 'float', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbPositionEntity', 'int', 'float', 'float', 'float', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbScaleEntity', 'int', 'float', 'float', 'float', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbRotateEntity', 'int', 'float', 'float', 'float', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbPointEntity', 'int', 'int', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbAlignToVector', 'int', 'float', 'float', 'float', 'int', 'float');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbNameEntity', 'int', 'PAnsiChar');
$b3dLib->add(WinCBase::cdecl, 'PAnsiChar', 'bbEntityName', 'int');
$b3dLib->add(WinCBase::cdecl, 'PAnsiChar', 'bbEntityClass', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbClearWorld', 'int', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'void', 'bbSetEntityID', 'int', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbEntityID', 'int');
$b3dLib->add(WinCBase::cdecl, 'int', 'bbActiveTextures');




define( BBFALSE, 0 );
define( BBTRUE, 1 );

define( GFX_DEFAULT, 0 );
define( GFX_FULLSCREEN, 1 );
define( GFX_WINDOWED, 2 );
define( GFX_WINDOWEDSCALED, 3 );

define( PROJ_NONE, 0 );
define( PROJ_PERSPECTIVE, 1 );
define( PROJ_ORTHO, 2 );

define( LIGHT_DIRECTIONAL, 1 );
define( LIGHT_POINT, 2 );
define( LIGHT_SPOT, 3 );

define( TX_COLOR, 1 );
define( TX_ALPHA, 2 );
define( TX_MASKED, 4 );
define( TX_MIP, 8 );
define( TX_CLAMPU, 16 );
define( TX_CLAMPV, 32 );
define( TX_SPHERE, 64 );
define( TX_CUBIC, 128 );
define( TX_VRAM, 256 );
define( TX_HIGHCOLOR, 512 );

define( TX_BLEND_NONE, 0 );
define( TX_BLEND_ALPHA, 1 );
define( TX_BLEND_MULT, 2 );
define( TX_BLEND_ADD, 3 );
define( TX_BLEND_DOT3, 4 );
define( TX_BLEND_MULT2, 5 );

define( CUBEFACE_LEFT, 0 );
define( CUBEFACE_FRONT, 1 );
define( CUBEFACE_RIGHT, 2 );
define( CUBEFACE_BACK, 3 );
define( CUBEFACE_TOP, 4 );
define( CUBEFACE_BOTTOM, 5 );

define( CUBEMODE_SPECULAR, 1 );
define( CUBEMODE_DIFFUSE, 2 );
define( CUBEMODE_REFRACTION, 3 );

define( BRUSHBLEND_NONE, 0 );
define( BRUSHBLEND_ALPHA, 1 );
define( BRUSHBLEND_MULTIPLY, 2 );
define( BRUSHBLEND_ADD, 3 );

define( BRUSHFX_NONE, 0 );
define( BRUSHFX_FULLBRIGHT, 1 );
define( BRUSHFX_VERTEXCOLOR, 2 );
define( BRUSHFX_FLAT, 4 );
define( BRUSHFX_NOFOG, 8 );
define( BRUSHFX_DOUBLESIDED, 16 );
define( BRUSHFX_VERTEXALPHA, 32 );

define( COLLIDE_SPHERESPHERE, 1 );
define( COLLIDE_SPHEREPOLY, 2 );
define( COLLIDE_SPHEREBOX, 3 );

define( COLLIDE_STOP, 1 );
define( COLLIDE_SLIDE1, 2 );
define( COLLIDE_SLIDE2, 3 );

define( PICK_NONE, 0 );
define( PICK_SPHERE, 1 );
define( PICK_POLY, 2 );
define( PICK_BOX, 3 );

define( ANIM_STOP, 0 );
define( ANIM_LOOP, 1 );
define( ANIM_PINGPONG, 2 );
define( ANIM_ONCE, 3 );

define( SPRITE_TURNXY, 1 );
define( SPRITE_STILL, 2 );
define( SPRITE_ALIGNZ, 3 );
define( SPRITE_TURNY, 4 );

define( PLAYCD_SINGLE, 1 );
define( PLAYCD_LOOP, 2 );
define( PLAYCD_ALL, 3 );

define( MOUSE_BUTTON, 1 );
define( MOUSE_RIGHTBUTTON, 2 );
define( MOUSE_MIDDLEBUTTON, 3 );

define( JOYTYPE_NONE, 0 );
define( JOYTYPE_DIGITAL, 1 ); 
define( JOYTYPE_ANALOG, 2 );

define( KEY_ESCAPE, 1 );
define( KEY_TAB, 15 );
define( KEY_SPACE, 57 );
define( KEY_RETURN, 28 );
define( KEY_LEFTSHIFT, 42 );
define( KEY_LEFTCONTROL, 29 );
define( KEY_LEFTALT, 56 );
define( KEY_RIGHTSHIFT, 54 );
define( KEY_RIGHTCONTROL, 157 );
define( KEY_RIGHTALT, 184 );
 
define( KEY_UP, 200 );
define( KEY_LEFT, 203 );
define( KEY_RIGHT, 205 );
define( KEY_DOWN, 208 );
 
define( KEY_F1, 59 );
define( KEY_F2, 60 ); 
define( KEY_F3, 61 );
define( KEY_F4, 62 );
define( KEY_F5, 63 );
define( KEY_F6, 64 );
define( KEY_F7, 65 );
define( KEY_F8, 66 );
define( KEY_F9, 67 );
define( KEY_F10, 68 );

define( KEY_Q, 16 );
define( KEY_W, 17 );
define( KEY_E, 18 );
define( KEY_R, 19 );
define( KEY_T, 20 ); 
define( KEY_Y, 21 );
define( KEY_U, 22 );
define( KEY_I, 23 );
define( KEY_O, 24 );
define( KEY_P, 25 );
 
define( KEY_A, 30 ); 
define( KEY_S, 31 );
define( KEY_D, 32 );
define( KEY_F, 33 );
define( KEY_G, 34 );
define( KEY_H, 35 );
define( KEY_J, 36 );
define( KEY_K, 37 );
define( KEY_L, 38 );
 
define( KEY_Z, 44 );
define( KEY_X, 45 );
define( KEY_C, 46 );
define( KEY_V, 47 );
define( KEY_B, 48 );
define( KEY_N, 49 );
define( KEY_M, 50 ); 
 
define( KEY_1, 2 );
define( KEY_2, 3 );
define( KEY_3, 4 );
define( KEY_4, 5 );
define( KEY_5, 6 );
define( KEY_6, 7 );
define( KEY_7, 8 );
define( KEY_8, 9 );
define( KEY_9, 10 ); 
define( KEY_0, 11 );

define( KEY_MINUS, 12 );
define( KEY_EQUALS, 13 );
define( KEY_BACKSPACE, 14 );
define( KEY_LEFTBRACKET, 26 );
define( KEY_RIGHTBRACKET, 27 );
define( KEY_SEMICOLON, 39 );
define( KEY_APOSTROPHE, 40 ); 
define( KEY_GRAVE, 41 );
define( KEY_BACKSLASH, 43 );
define( KEY_COMMA, 51 );
define( KEY_PERIOD, 52 );
define( KEY_SLASH, 53 );
define( KEY_CAPSLOCK, 58 );
 
define( KEY_PRINT, 183 );
define( KEY_SCROLLLOCK, 70 ); 
define( KEY_PAUSEBREAK, 197 );
define( KEY_INSERT, 210 );
define( KEY_DELETE, 211 );
define( KEY_HOME, 199 );
define( KEY_END, 207 );
define( KEY_PAGEUP, 201 );
define( KEY_PAGEDOWN, 209 );

define( KEY_NUMLOCK, 69 );
define( KEY_NUMPADDIVIDE, 181 );
define( KEY_NUMPADMULT, 55 );
define( KEY_NUMPADMINUS, 74 );
define( KEY_NUMPADPLUS, 78 );
define( KEY_NUMPADENTER, 156 );
define( KEY_NUMPADDOT, 83 );
define( KEY_NUMPAD0, 82 );
define( KEY_NUMPAD1, 79 );
define( KEY_NUMPAD2, 80 ); 
define( KEY_NUMPAD3, 81 );
define( KEY_NUMPAD4, 75 );
define( KEY_NUMPAD5, 76 );
define( KEY_NUMPAD6, 77 );
define( KEY_NUMPAD7, 71 );
define( KEY_NUMPAD8, 72 );
define( KEY_NUMPAD9, 73 );

define( KEY_F11, 87 );
define( KEY_F12, 88 );
define( KEY_LEFTWINDOWS, 219 );
define( KEY_RIGHTWINDOWS, 220 );
define( KEY_NUMPADEQUALS, 141 );
define( KEY_NUMPADCOMMA, 179 );
define( KEY_OEM_102, 86 );
define( KEY_AT, 145 );
define( KEY_COLON, 146 );
define( KEY_UNDERLINE, 147 );
define( KEY_BREAK, 149 );

define( KEY_PREVIOUSTRACK, 144 );
define( KEY_NEXTTRACK, 153 );
define( KEY_MUTE, 160 );
define( KEY_PLAYPAUSE, 162 );
define( KEY_STOP, 164 );
define( KEY_VOLUMELESS, 174 );
define( KEY_VOLUMEMORE, 176 );
 
define( KEY_APPS, 221 );
define( KEY_POWER, 222 );
define( KEY_SLEEP, 223 );
define( KEY_WAKE, 227 );

define( KEY_WEBHOME, 178 );
define( KEY_WEBSEARCH, 229 );
define( KEY_WEBFAVORITES, 230 ); 
define( KEY_WEBREFRESH, 231 );
define( KEY_WEBSTOP, 232 );
define( KEY_WEBFORWARD, 233 );
define( KEY_WEBBACK, 234 );
 
define( KEY_MYCOMPUTER, 235 );
define( KEY_CALCULATOR, 161 );
define( KEY_MAIL, 236 );
define( KEY_MEDIASELECT, 237 );